plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}


def myConfigPropertiesFile = rootProject.file("config")
def myConfigProperties = new Properties()
myConfigProperties.load(new FileInputStream(myConfigPropertiesFile))

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL","\"${myConfigProperties['BaseUrl']}\"")
            buildConfigField("String", "SOCKET_PORT","\"${myConfigProperties['SocketPort']}\"")
        }
        release {
            buildConfigField("String", "BASE_URL","\"${myConfigProperties['BaseUrl']}\"")
            buildConfigField("String", "SOCKET_PORT","\"${myConfigProperties['SocketPort']}\"")
        }
    }
}


dependencies {
    api project(':domain')

    //retrofit for network calling
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.github.ihsanbal:LoggingInterceptor:3.0.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    //room for local caching large data
    def room_version = "2.4.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //datastore for local cashing in key and value
    def data_store_version = "1.0.0"
    implementation "androidx.datastore:datastore-core:$data_store_version"
    implementation "androidx.datastore:datastore-preferences:$data_store_version"

    //socket for realtime
    implementation('io.socket:socket.io-client:2.0.1')

    //gson for serializing and deserializing
    implementation "com.google.code.gson:gson:2.8.7"

    //hilt for di
    def hilt_version = "2.38.1"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
}